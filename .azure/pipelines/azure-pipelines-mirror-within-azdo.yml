# Configure which branches trigger builds
trigger:
  batch: true
  branches:
    include:
    - internal/release/6.0

variables:
  - group: Mirror-Credentials

# Merges code from one AzDO branch into another
jobs:
- template: /eng/common/templates/jobs/jobs.yml
  parameters:
    enableTelemetry: true
    helixRepo: dotnet/arcade
    jobs:
    - job: Merge_Azure_DevOps_Branches
      enableSBOM: false
      pool:
        name: NetCore1ESPool-Internal
        demands: ImageOverride -equals Build.Server.Amd64.VS2019
      variables:
      - name: WorkingDirectoryName
        value: repo-dir
      - name: AzdoRepo
        value: https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-aspnetcore
      - name: TargetBranchName
        value: $(Build.SourceBranch)-nonstable
      - name: BranchToMirror
        value: $(Build.SourceBranch)
      steps:
      - script: |
          git clone https://dn-bot:$(dn-bot-dnceng-build-rw-code-rw)@dev.azure.com/dnceng/internal/_git/$(AzdoRepo) $(WorkingDirectoryName)
        displayName: Clone AzDO repo
      - script: |
          git checkout -b $(TargetBranchName) -t origin/$(TargetBranchName)
        displayName: Check out target branch
        workingDirectory: $(WorkingDirectoryName)
      - script: |
          git -c user.email="dotnet-bot@microsoft.com" -c user.name="dotnet-bot" merge origin/$(BranchToMirror) -m "Merge in '$(BranchToMirror)' changes" 
        displayName: Merge head branch to target branch
        workingDirectory: $(WorkingDirectoryName)
      - script: |
          git push origin $(TargetBranchName)
        displayName: Push changes to Azure DevOps repo
        workingDirectory: $(WorkingDirectoryName)

      - task: PowerShell@1
        displayName: Broadcast target, branch, commit in metadata
        continueOnError: true
        condition: always()
        inputs:
          scriptType: inlineScript
          arguments: '$(AzdoRepo) $(BranchToMirror)'
          workingDirectory: $(WorkingDirectoryName)
          inlineScript: |
            param([string]$repo, [string]$branch)

            $commit = (git rev-parse HEAD).Substring(0, 7)
            $target = "$repo $branch".Replace('/', ' ')

            Write-Host "##vso[build.updatebuildnumber]$target $commit"
            Write-Host "##vso[build.addbuildtag]$target"