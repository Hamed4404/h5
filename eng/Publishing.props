<Project>

  <PropertyGroup>
    <ProducesDotNetReleaseShippingAssets>true</ProducesDotNetReleaseShippingAssets>
    <_UploadPathRoot>aspnetcore</_UploadPathRoot>
    <ProductVersionFileName>productVersion.txt</ProductVersionFileName>
    <RepoProductVersionFileName>$(_UploadPathRoot)-$(ProductVersionFileName)</RepoProductVersionFileName>
    <ProductVersionFileLocation>$(ArtifactsShippingPackagesDir)$(ProductVersionFileName)</ProductVersionFileLocation>
    <RepoProductVersionFileLocation>$(ArtifactsShippingPackagesDir)$(RepoProductVersionFileName)</RepoProductVersionFileLocation>
    <PublishInstallerBaseVersion Condition="'$(PublishInstallerBaseVersion)' == '' and '$(DotNetBuildRepo)' == 'true'">true</PublishInstallerBaseVersion>

    <!-- Don't push nuget packages from other builds than Windows when not building inside the VMR. -->
    <EnableDefaultPublishItems Condition="'$(OS)' != 'Windows_NT' and
                                          '$(PostBuildSign)' != 'true' and
                                          '$(DotNetBuildRepo)' != 'true'">false</EnableDefaultPublishItems>
    <!-- This avoids creating VS.*.symbols.nupkg packages that are identical to the original package. -->
    <AutoGenerateSymbolPackages>false</AutoGenerateSymbolPackages>
  </PropertyGroup>

  <!-- $(InstallersOutputPath), $(SymbolsOutputPath), and $(ChecksumExtensions) are not defined. Root Directory.Build.props is not imported. -->
  <ItemGroup>
    <!-- Include our "loose" PDBs when publishing symbols. -->
    <FilesToPublishToSymbolServer Include="$(ArtifactsDir)symbols\**\*.pdb" />
    <WixPacksToPublish Include="$(ArtifactsDir)installers\**\*.wixpack.zip" />

    <!-- Prepare for _PublishInstallersAndChecksums target. -->
    <_InstallersToPublish Remove="@(_InstallersToPublish)" />
    <_InstallersToPublish Include="$(ArtifactsDir)packages\**\*.jar" UploadPathSegment="jar" />
    <_InstallersToPublish Include="$(ArtifactsDir)packages\**\*.pom" UploadPathSegment="jar" />
    <!-- All builds produce npm assets - only publish them once -->
    <_InstallersToPublish Include="$(ArtifactsDir)packages\**\*.tgz" UploadPathSegment="npm" Condition="'$(OS)' == 'Windows_NT'" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.deb" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.exe" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.msi" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.rpm" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.tar.gz" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.version" UploadPathSegment="Runtime" Condition=" '$(PublishInstallerBaseVersion)' == 'true'" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.wixlib" UploadPathSegment="Runtime" />
    <_InstallersToPublish Include="$(ArtifactsDir)installers\**\*.zip" UploadPathSegment="Runtime" />
    <!-- Remove wixpacks if not doing post-build signing, since they are not needed -->
    <_InstallersToPublish Remove="@(WixPacksToPublish)" Condition="'$(PostBuildSign)' != 'true'" />
    <_ChecksumsToPublish Include="$(ArtifactsDir)installers\**\*.sha512" />
  </ItemGroup>

  <Target
    Name="_PublishInstallersAndChecksumsAndProductVersion"
    DependsOnTargets="_WriteProductVersionFile"
    BeforeTargets="PublishToAzureDevOpsArtifacts">
    <!--
      This target is defined in eng/targets/Packaging.targets and Npm.Common.targets and included in every C#, F#,
      and npm project. We use Microsoft.AspNetCore.InternalTesting.csproj because it is non-shipping (we need a non-stable
      version string to use as our publish location) non-packed (won't be shipped in the future).
    -->
    <MSBuild Projects="$(RepoRoot)src\Testing\src\Microsoft.AspNetCore.InternalTesting.csproj"
        Properties="ExcludeFromBuild=false"
        Targets="_GetPackageVersionInfo">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedPackageVersionInfo" />
    </MSBuild>

    <PropertyGroup>
      <_PackageVersion>@(_ResolvedPackageVersionInfo->'%(PackageVersion)')</_PackageVersion>
    </PropertyGroup>

    <ItemGroup>
      <ItemsToPushToBlobFeed Include="@(_ChecksumsToPublish)"
                             IsShipping="false"
                             PublishFlatContainer="true"
                             RelativeBlobPath="$(_UploadPathRoot)/Runtime/$(_PackageVersion)/%(Filename)%(Extension)" />

      <ItemsToPushToBlobFeed Include="@(_InstallersToPublish)"
                             IsShipping="!$([System.String]::Copy('%(Filename)').ToLower().Contains('internal'))"
                             PublishFlatContainer="true"
                             RelativeBlobPath="$(_UploadPathRoot)/%(_InstallersToPublish.UploadPathSegment)/$(_PackageVersion)/%(Filename)%(Extension)" />

      <ItemsToPushToBlobFeed Include="$(ProductVersionFileLocation)"
                             Condition="'$(PublishInstallerBaseVersion)' == 'true'"
                             IsShipping="false"
                             PublishFlatContainer="true"
                             RelativeBlobPath="$(_UploadPathRoot)/Runtime/$(_PackageVersion)/$(ProductVersionFileName)" />

      <ItemsToPushToBlobFeed Include="$(RepoProductVersionFileLocation)"
                             Condition="'$(PublishInstallerBaseVersion)' == 'true'">
                             IsShipping="false"
                             PublishFlatContainer="true"
                             RelativeBlobPath="$(_UploadPathRoot)/Runtime/$(_PackageVersion)/$(RepoProductVersionFileName)" />
    </ItemGroup>
  </Target>

  <Target
    Name="_WriteProductVersionFile"
    Condition="'$(PublishInstallerBaseVersion)' == 'true'">
    <!--
      This target is defined in eng/targets/Packaging.targets and Npm.Common.targets and included in every C#, F#,
      and npm project. We use Microsoft.AspNetCore.InternalTesting.csproj because it is non-shipping (we need a non-stable
      version string to use as our publish location) non-packed (won't be shipped in the future).
    -->
    <MSBuild Projects="$(RepoRoot)src\Testing\src\Microsoft.AspNetCore.InternalTesting.csproj"
        Properties="ExcludeFromBuild=false"
        Targets="_GetPackageVersionInfo">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedProductVersionInfo" />
    </MSBuild>

    <PropertyGroup>
      <_ProductVersion>%(_ResolvedProductVersionInfo.PackageVersion)</_ProductVersion>
    </PropertyGroup>

    <!-- Generate productVersion.txt containing the value of $(PackageVersion) -->
    <WriteLinesToFile
      File="$(ProductVersionFileLocation)"
      Lines="$(_ProductVersion)"
      Overwrite="true"
      Encoding="ASCII" />
    <WriteLinesToFile
      File="$(RepoProductVersionFileLocation)"
      Lines="$(_ProductVersion)"
      Overwrite="true"
      Encoding="ASCII" />
  </Target>

</Project>
