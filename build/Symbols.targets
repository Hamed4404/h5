<Project>

  <PropertyGroup>
    <PackageDependsOn>$(PackageDependsOn);ConvertPortableSymbolsToFull</PackageDependsOn>
  </PropertyGroup>

  <Target Name="ConvertPortableSymbolsToFull" DependsOnTargets="_GetExecutablesWithSymbols">
    <Error Text="Could not find path to Pdb2Pdb.exe: $(Pdb2PdbToolPath)" Condition=" ! Exists($(Pdb2PdbToolPath)) " />
    <Message Importance="High" Text="Converting portable symbols to full" />
    <MSBuild Projects="@(ExecutableWithSymbol)"
      Targets="_CoreConvertPortableSymbolToFull"
      Properties="Pdb2PdbToolPath=$(Pdb2PdbToolPath)"
      BuildInParallel="true"
      Condition="@(ExecutableWithSymbol->Count()) != 0" />
    <Warning Text="Could not find any symbols to convert." Condition="@(ExecutableWithSymbol->Count()) == 0" />
  </Target>

  <Target Name="_GetExecutablesWithSymbols">
    <ItemGroup>
      <_ExecutableBinaries Include="
        $(UnsignedPackagesPath)**\*.dll;
        $(UnsignedPackagesPath)**\*.exe;
        $(UnsignedVSIXPath)**\*.dll;
        $(UnsignedVSIXPath)**\*.exe;
        $(UnsignedMPacksPath)**\*.dll;
        $(UnsignedMPacksPath)**\*.exe;
        " />

      <ExecutableWithSymbol Include="$(MSBuildProjectFullPath)" Condition=" Exists('%(_ExecutableBinaries.RootDir)%(Directory)%(FileName).pdb') ">
        <AdditionalProperties>
          PdbExePath=%(_ExecutableBinaries.FullPath);
          PdbPath=%(RootDir)%(Directory)%(FileName).pdb;
          PdbOutputDir=$(FullSymbolsOutputPath)%(RecursiveDir);
          PdbOutputPath=$(FullSymbolsOutputPath)%(RecursiveDir)%(FileName).pdb
        </AdditionalProperties>
      </ExecutableWithSymbol>
    </ItemGroup>
  </Target>

  <Target Name="_CoreConvertPortableSymbolToFull">
    <MakeDir Directories="$(PdbOutputDir)" />
    <Message Text="Converting symbols from portable to full: $(PdbOutputPath)" />
    <Run FileName="$(Pdb2PdbToolPath)"
         Arguments="$(PdbExePath);/pdb;$(PdbPath);/sourcelink;/out;$(PdbOutputPath)" />
  </Target>

</Project>
