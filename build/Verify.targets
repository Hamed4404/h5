<Project>
  <!-- SDL verification tool -->
  <Target Name="BinScope">
    <PropertyGroup>
      <BinScope70InstallDir>$(MSBuildProgramFiles32)\Microsoft\BinScope for SDL 7.0\</BinScope70InstallDir>
      <BinScopeEXE>$(BinScope70InstallDir)BinScope.EXE</BinScopeEXE>

      <BinScopeOutDir Condition="'$(BinScopeOutDir)' == ''">$(ArtifactsDir)BinScope\</BinScopeOutDir>
      <BinScopeLogFile Condition="'$(BinScopeLogFile)' == ''">$(BinScopeOutDir)BinScopeResults.xml</BinScopeLogFile>
      <BinScopeTargetDir Condition="'$(BinScopeTarget)' == ''">$(IntermediateDir)BinScope\</BinScopeTargetDir>
    </PropertyGroup>

    <ItemGroup>
      <!--
        Skipping native binaries. BinScope only works on managed assemblies.
      -->
      <BinScopeTargetFiles
        Include="$(UnsignedPackagesPath)**\*.dll"
        Exclude="
          $(UnsignedPackagesPath)dotnet-sql-cache.*\tools\any\any\runtimes\**\native\sni.dll;
          $(UnsignedPackagesPath)Microsoft.AspNetCore.Server.IIS*\runtimes\**\aspnetcorerh.dll;
          $(UnsignedPackagesPath)Microsoft.AspNetCore.AspNetCoreModule.*\**\aspnetcore.dll;
          $(UnsignedPackagesPath)Microsoft.AspNetCore.AspNetCoreModule.*\**\aspnetcorerh.dll;
          " />
    </ItemGroup>

    <RemoveDir Directories="$(BinScopeTargetDir)" />
    <MakeDir Directories="$(BinScopeTargetDir)" />

    <Copy SourceFiles="@(BinScopeTargetFiles)" DestinationFiles="@(BinScopeTargetFiles->'$(BinScopeTargetDir)%(RecursiveDir)\%(Filename)%(Extension)')" />

    <WriteLinesToFile
      File="$(IntermediateDir)BinScope.rsp"
      Overwrite="true"
      Lines="@(BinScopeTargetFiles->'/target $(BinScopeTargetDir)%(RecursiveDir)%(Filename)%(Extension) $(BinScopeSymbolOption)')" />

    <Error
      Text="BinScope could not be found at $(BinScope70InstallDir)"
      Condition="!Exists('$(BinScopeEXE)') AND '$(LocalBuild)'!='true'" />

    <Warning
      Text="BinScope could not be found at $(BinScope70InstallDir). Skipping BinScope"
      Condition="!Exists('$(BinScopeEXE)') AND '$(LocalBuild)'=='true'" />

    <Exec
      Command="&quot;$(BinScopeEXE)&quot; @$(IntermediateDir)BinScope.rsp /logfile $(BinScopeLogFile) /Xslt"
      Condition="Exists('$(BinScopeEXE)')" />
  </Target>

  <!-- Runs NuGetPackageVerifier on signed packages -->
  <Target Name="VerifySignedPackages" DependsOnTargets="GetPackagesToPublish">
    <ItemGroup>
      <ExcludedRules Include="PowerShellScriptIsSignedRule" Condition="'$(SignType)' != 'real'" />
      <ExcludedRules Include="AuthenticodeSigningRule" Condition="'$(SignType)' != 'real'" />
      <DirectoriesToScan Include="%(PackagesToPublish.RootDir)%(PackagesToPublish.Directory)" />
    </ItemGroup>

    <VerifyPackages
      ArtifactDirectory="%(DirectoriesToScan.Identity)"
      RuleFile="$(RepositoryRoot)NuGetPackageVerifier-Signed.json"
      Condition="Exists('%(DirectoriesToScan.Identity)')"
      ExcludedRules="@(ExcludedRules)" />
  </Target>

  <!-- Ensures binaries in the aspnetcore shared framework are correctly authenticode signed -->
  <Target Name="VerifySignedSharedFxBinaries" Condition="'$(SignType)' == 'real'">
    <ItemGroup>
      <SignedSharedFxBinaries Include="$(UnsignedSharedFxPath)**\*.dll" Exclude="$(UnsignedSharedFxPath)*.*"/>
    </ItemGroup>
    <RepoTasks.VerifySignedSharedFxBinaries Binaries="@(SignedSharedFxBinaries)" />
  </Target>

</Project>
