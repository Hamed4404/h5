<Project>
  <!-- SDL verification tool -->
  <Target Name="BinScope">
    <PropertyGroup>
      <BinScope70InstallDir>$(MSBuildProgramFiles32)\Microsoft\BinScope for SDL 7.0\</BinScope70InstallDir>
      <BinScopeEXE>$(BinScope70InstallDir)BinScope.EXE</BinScopeEXE>

      <BinScopeOutDir Condition="'$(BinScopeOutDir)' == ''">$(ArtifactsDir)BinScope\</BinScopeOutDir>
      <BinScopeLogFile Condition="'$(BinScopeLogFile)' == ''">$(BinScopeOutDir)BinScopeResults.xml</BinScopeLogFile>
      <BinScopeTargetDir Condition="'$(BinScopeTarget)' == ''">$(IntermediateOutputPath)BinScope\</BinScopeTargetDir>
    </PropertyGroup>

    <ItemGroup>
      <BinScopeTargetFiles Include="$(UnsignedPackagesPath)**\*.dll" />
    </ItemGroup>

    <RemoveDir Directories="$(BinScopeTargetDir)" />
    <MakeDir Directories="$(BinScopeTargetDir)" />

    <Copy SourceFiles="@(BinScopeTargetFiles)" DestinationFiles="@(BinScopeTargetFiles->'$(BinScopeTargetDir)%(RecursiveDir)\%(Filename)%(Extension)')" />

    <WriteLinesToFile
      File="$(IntermediateOutputPath)BinScope.rsp"
      Overwrite="true"
      Lines="@(BinScopeTargetFiles->'/target $(BinScopeTargetDir)%(RecursiveDir)%(Filename)%(Extension) $(BinScopeSymbolOption)')" />

    <Error
      Text="BinScope could not be found at $(BinScope70InstallDir)"
      Condition="!Exists('$(BinScopeEXE)') AND '$(LocalBuild)'!='true'" />

    <Warning
      Text="BinScope could not be found at $(BinScope70InstallDir). Skipping BinScope"
      Condition="!Exists('$(BinScopeEXE)') AND '$(LocalBuild)'=='true'" />

    <Exec
      Command="&quot;$(BinScopeEXE)&quot; @$(IntermediateOutputPath)BinScope.rsp /logfile $(BinScopeLogFile) /Xslt"
      Condition="Exists('$(BinScopeEXE)')" />
  </Target>

  <!-- Runs NuGetPackageVerifier on signed (timestamped and timestamp-free packages -->
  <Target Name="VerifySignedPackages">
    <PropertyGroup>
      <SignedDir>$(ArtifactsDir)Signed</SignedDir>
      <SignedPackagesDir>$(SignedDir)Packages\</SignedPackagesDir>
      <NoTimestampPackagesDir>$(SignedDir)Packages-NoTimeStamp\</NoTimestampPackagesDir>
      <OOBPackagesDir>$(SignedDir)OobPackages</OOBPackagesDir>
      <NoTimestampOOBPackagesDir>$(SignedDir)OobPackages-NoTimeStamp</NoTimestampOOBPackagesDir>
    </PropertyGroup>

    <ItemGroup>
      <DirectoriesToScan Include="$(SignedPackagesDir);$(NoTimestampPackagesDir);$(OOBPackagesDir);$(NoTimestampOOBPackagesDir)" />
    </ItemGroup>

    <VerifyPackages
      ArtifactDirectory="%(DirectoriesToScan.Identity)"
      RuleFile="$(RepositoryRoot)NuGetPackageVerifier-Signed.json"
      Condition="Exists('%(DirectoriesToScan.Identity)')" />
  </Target>

  <!-- Ensures binaries in the runtime store are correctly authenticode signed -->
  <Target Name="VerifySignedRuntimeStoreBinaries">
    <ItemGroup>
      <SignedRuntimeStoreBinaries Include="$(UnsignedPackageCachePath)**\*.dll" Exclude="$(UnsignedPackageCachePath)*.*"/>
    </ItemGroup>
    <RepoTasks.VerifySignedRuntimeStoreBinaries Binaries="@(SignedRuntimeStoreBinaries)" />
  </Target>

</Project>
