<Project>
  <PropertyGroup>
    <_PoliCheckOutputFile>$(IntermediateDir)policheck_results.xml</_PoliCheckOutputFile>
  </PropertyGroup>

  <Target Name="PoliCheck" DependsOnTargets="_GetPolicheckSettings;_CorePolicheck;_VerifyPolicheckResults" Condition=" '$(SkipPolicheck)' != 'true' " />

  <Target Name="_GetPolicheckSettings">
    <!-- These are terms that appear frequently but are not used offensively e.g. red is a color constant name. -->
    <PropertyGroup>
      <Exclusions>countries;country</Exclusions>
      <!-- Refers to the browser. -->
      <Exclusions>$(Exclusions);Edge</Exclusions>
    </PropertyGroup>

    <ItemGroup>
      <PolicheckFiles Include="$(PoliCheckPath)**\*" />
      <!-- incremental builds fail due to max path checks. https://github.com/Microsoft/msbuild/issues/53 -->
      <PolicheckFiles Remove="%(PolicheckFiles.FullPath)" Condition="!Exists(%(PolicheckFiles.FullPath))" />

      <!-- List is sorted OrdinalIgnoreCase. Path must be the relative path (non-wildcard) of the file inside the symbols nupkg -->

      <SrcExclusions Include="wwwroot\lib\bootstrap\dist\js\bootstrap.bundle.js">
        <term>kickass</term>
        <Justification>bootstrap is external code shipping in our templates.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\bootstrap\dist\js\bootstrap.bundle.js">
        <term>WTF</term>
        <Justification>bootstrap is external code shipping in our templates.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="mscorrc.debug.dll">
        <term>hang</term>
        <Justification>Refers to a stuck process/thread.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\jquery\dist\jquery.js;
        NuGet.Build.Tasks.Pack.xml">
        <term>hanging</term>
        <Justification>Refers to a stuck process/thread.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\jquery\dist\jquery.js">
        <term>screw</term>
        <Justification>jquery is external code shipping in our templates.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\jquery-validation\dist\additional-methods.js">
        <term>Brazilian</term>
        <Justification>jquery.validation includes some geopolitical terms to support validating country specific data formats.</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\jquery-validation\dist\additional-methods.js">
        <term>nip</term>
        <Justification>Used here as an acronym for tax ID's in Poland</Justification>
      </SrcExclusions>
      <SrcExclusions Include="wwwroot\lib\jquery-validation\dist\additional-methods.min.js">
        <term>nip</term>
        <Justification>Used here as an acronym for tax ID's in Poland</Justification>
      </SrcExclusions>
    </ItemGroup>

    <ItemGroup>
      <!-- Path must be the relative path (non-wildcard) of the file inside the symbols nupkg -->
      <!-- Paths using wildcards must use $(PoliCheckPath) as the base for MSBuild to be happy -->
      <FileExclusions Include="
        $(PoliCheckPath)**\package-lock.json">
        <Justification>package-lock.json files are generated content that we can't control.</Justification>
      </FileExclusions>
      <FileExclusions Include="
        $(PoliCheckPath)**\System.Text.Encoding.CodePages.dll;
        $(PoliCheckPath)**\System.Text.Encodings.Web.dll;">
        <Justification>These BCL libraries includes geopolitical terms to support localized code pages.</Justification>
      </FileExclusions>

      <FileExclusions Include="
        $(PoliCheckPath)**\*.deps.json">
        <Justification>Deps files are generated and should only contain package names and sha's.</Justification>
      </FileExclusions>
    </ItemGroup>
  </Target>

  <Target Name="_CorePolicheck"
          Inputs="@(PolicheckFiles)"
          Outputs="$(_PoliCheckOutputFile)">

    <PropertyGroup>
      <_PoliCheckDirectory>$(MSBuildProgramFiles32)\Microsoft\Policheck\</_PoliCheckDirectory>
      <_PoliCheckDirectory Condition="!Exists('$(_PoliCheckDirectory)')">$(ProgramFiles)\Microsoft\Policheck\</_PoliCheckDirectory>
      <_PoliCheckFileTypesPath>$(_PoliCheckDirectory)Config\FTSets.xml</_PoliCheckFileTypesPath>
      <_PoliCheckExe>$(_PoliCheckDirectory)policheck.exe</_PoliCheckExe>

      <_PoliCheckArguments>/f:&quot;$(PoliCheckPath.TrimEnd('\'))&quot; /t:"9" /o:&quot;$(_PoliCheckOutputFile)&quot; /ge:0 /pe:0 /fc:1 /xs:1</_PoliCheckArguments>
    </PropertyGroup>

    <Error
      Text="Policheck.exe could not be found. See http://toolbox/policheck for installation instructions."
      Condition="!Exists('$(_PoliCheckExe)') AND '$(LocalBuild)'!='true'" />

    <Warning
      Text="Policheck.exe could not be found. See http://toolbox/policheck for installation instructions. Proceeding without running the tool."
      Condition="!Exists('$(_PoliCheckExe)') AND '$(LocalBuild)'=='true'" />

    <Exec
      Command="&quot;$(_PoliCheckExe)&quot; $(_PoliCheckArguments)"
      IgnoreExitCode="true"
      Condition="Exists('$(_PoliCheckExe)')" />
  </Target>

  <Target Name="_VerifyPolicheckResults">
    <RepoTasks.VerifyPoliCheckResults
      PoliCheckOutputFile="$(_PoliCheckOutputFile)"
      ExcludeTerms="$(Exclusions)"
      ExcludeFiles="@(FileExclusions)"
      DetailedExclusions="@(SrcExclusions)"
      Condition="Exists('$(_PoliCheckOutputFile)')" />
  </Target>
</Project>
