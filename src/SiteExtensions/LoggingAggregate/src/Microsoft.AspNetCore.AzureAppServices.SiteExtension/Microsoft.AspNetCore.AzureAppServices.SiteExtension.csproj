<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <title>ASP.NET Core Logging Integration</title>
    <Description>This site extension enables logging integration for ASP.NET Core applications on Azure App Service.</Description>
    <TargetFramework>net461</TargetFramework>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageTags>aspnet;logging;aspnetcore;AzureSiteExtension;keyvault;configuration;dataprotection</PackageTags>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageType>AzureSiteExtension</PackageType>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IncludeSymbols>false</IncludeSymbols>
    <ContentTargetFolders>content</ContentTargetFolders>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DisablePackageReferenceRestrictions>true</DisablePackageReferenceRestrictions>
    <NoSemVer20>true</NoSemVer20>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.2.1" Version="$(MicrosoftAspNetCoreAzureAppServicesSiteExtension21PackageVersion)" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.2.2" Version="$(MicrosoftAspNetCoreAzureAppServicesSiteExtension22PackageVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.3.0.x86" Version="$(PackageVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.3.0.x64" Version="$(PackageVersion)" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="applicationHost.xdt" />
    <Content Include="scmApplicationHost.xdt" />
    <Content Include="$(OutputPath)\Microsoft.Web.Xdt.Extensions.dll" PackagePath="content" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Web.Xdt.Extensions" PrivateAssets="All" />
  </ItemGroup>

  <!-- XmlTransformation task is not available in 'dotnet msbuild'. -->
  <Target Name="_CreateNuGetConfig" BeforeTargets="_GenerateRestoreGraph" Condition="'$(MSBuildRuntimeType)' != 'Core'">
    <!-- Copy root NuGet.config into this directory and add $(ArtifactsNonShippingPackagesDir) as a feed. -->
    <XslTransformation XmlInputPaths="$(RepoRoot)/NuGet.config"
        OutputPaths="$(MSBuildProjectDirectory)/NuGet.config"
        XslContent="&lt;?xml version='1.0'?&gt;
        &lt;xsl:stylesheet version='1.0' xmlns:xsl='http://www.w3.org/1999/XSL/Transform'&gt;
          &lt;xsl:template match='@* | node()'&gt;
            &lt;xsl:copy&gt;
              &lt;xsl:apply-templates select='@* | node()' /&gt;
            &lt;/xsl:copy&gt;
          &lt;/xsl:template&gt;
          &lt;xsl:template match='/configuration/packageSources/add[last()]'&gt;
            &lt;xsl:copy-of select='.' /&gt;
            &lt;xsl:text&gt;
    &lt;/xsl:text&gt;&lt;add key='non-shipping-packages' value='$(ArtifactsNonShippingPackagesDir)' /&gt;
          &lt;/xsl:template&gt;
        &lt;/xsl:stylesheet&gt;" />
  </Target>

  <!-- Clean up file created above (as long as restore succeeds). -->
  <Target Name="_DeleteNuGetConfig" AfterTargets="Restore">
    <Delete Files="$(MSBuildProjectDirectory)/NuGet.config" />
  </Target>

  <Target Name="AddContent" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
        <ContentFilesToPack Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\content\**\*.*" />
        <!-- Temporarily skip the common files -->
        <FilteredContentFilesToPack Include="@(ContentFilesToPack)" Condition="'%(RecursiveDir)' != ''" />

        <None Include="@(FilteredContentFilesToPack)" PackagePath="content\%(RecursiveDir)%(Filename)%(Extension)" Pack="true" />
    </ItemGroup>
  </Target>

</Project>
