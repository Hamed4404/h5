#nullable enable
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddIndividualCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck! instance, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddIndividualCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus = null, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderAddCheckExtensions.AddTypeActivatedIndividualCheck<T>(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus? failureStatus, System.Collections.Generic.IEnumerable<string!>! tags, System.TimeSpan timeout, System.TimeSpan delay, System.TimeSpan period, params object![]! args) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncIndividualCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddAsyncIndividualCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.Tasks.Task<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>!>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddIndividualCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
static Microsoft.Extensions.DependencyInjection.HealthChecksBuilderDelegateExtensions.AddIndividualCheck(this Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder! builder, string! name, System.Func<System.Threading.CancellationToken, Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckResult>! check, System.Collections.Generic.IEnumerable<string!>? tags = null, System.TimeSpan? timeout = null, System.TimeSpan? delay = null, System.TimeSpan? period = null) -> Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder!
