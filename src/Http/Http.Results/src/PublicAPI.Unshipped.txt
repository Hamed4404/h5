#nullable enable
Microsoft.AspNetCore.Http.HttpResults.BadRequest<TValue>.ContentEncoding.get -> System.Text.Encoding?
Microsoft.AspNetCore.Http.HttpResults.BadRequest<TValue>.ContentType.get -> string?
Microsoft.AspNetCore.Http.HttpResults.InternalServerError
Microsoft.AspNetCore.Http.HttpResults.InternalServerError.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext! httpContext) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Http.HttpResults.InternalServerError.StatusCode.get -> int
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>.ContentEncoding.get -> System.Text.Encoding?
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>.ContentType.get -> string?
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext! httpContext) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>.StatusCode.get -> int
Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>.Value.get -> TValue?
Microsoft.AspNetCore.Http.HttpResults.NotFound<TValue>.ContentEncoding.get -> System.Text.Encoding?
Microsoft.AspNetCore.Http.HttpResults.NotFound<TValue>.ContentType.get -> string?
Microsoft.AspNetCore.Http.HttpResults.Ok<TValue>.ContentEncoding.get -> System.Text.Encoding?
Microsoft.AspNetCore.Http.HttpResults.Ok<TValue>.ContentType.get -> string?
static Microsoft.AspNetCore.Http.Results.BadRequest<TValue>(TValue? error, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.Results.InternalServerError() -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.Results.InternalServerError<TValue>(TValue? error) -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.Results.InternalServerError<TValue>(TValue? error, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.Results.NotFound<TValue>(TValue? value, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.Results.Ok<TValue>(TValue? value, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.IResult!
static Microsoft.AspNetCore.Http.TypedResults.BadRequest<TValue>(TValue? error, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.HttpResults.BadRequest<TValue>!
static Microsoft.AspNetCore.Http.TypedResults.InternalServerError() -> Microsoft.AspNetCore.Http.HttpResults.InternalServerError!
static Microsoft.AspNetCore.Http.TypedResults.InternalServerError<TValue>(TValue? error) -> Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>!
static Microsoft.AspNetCore.Http.TypedResults.InternalServerError<TValue>(TValue? error, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.HttpResults.InternalServerError<TValue>!
static Microsoft.AspNetCore.Http.TypedResults.NotFound<TValue>(TValue? value, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.HttpResults.NotFound<TValue>!
static Microsoft.AspNetCore.Http.TypedResults.Ok<TValue>(TValue? value, string? contentType = null, System.Text.Encoding? contentEncoding = null) -> Microsoft.AspNetCore.Http.HttpResults.Ok<TValue>!
