<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- 
      There's not much value in multi-targeting here, this doesn't run much .NET code, it tests MSBuild.
      
      This is also a partial workaround for https://github.com/Microsoft/msbuild/issues/2661 - this project
      has netcoreapp2.0 dependencies that need to be built first.
    --> 
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <DefineConstants Condition="'$(PreserveWorkingDirectory)'=='true'">$(DefineConstants);PRESERVE_WORKING_DIRECTORY</DefineConstants>
    <!-- Copy references locally so that we can use them in the test. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <BuildVariablesGeneratedFile>$(MSBuildProjectDirectory)\obj\BuildVariables.generated.cs</BuildVariablesGeneratedFile>
    <CompileDependsOn>EnsureBuildVariablesGeneratedFile;$(CompileDependsOn)</CompileDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <None Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
    <Compile Include="$(BuildVariablesGeneratedFile)" Condition="Exists('$(BuildVariablesGeneratedFile)')" />
  </ItemGroup>
  
  <!-- The test projects rely on these binaries being available -->
  <ItemGroup>
    <Reference Include="System.Diagnostics.DiagnosticSource" />
    <Reference Include="Microsoft.AspNetCore.Html.Abstractions" />

  </ItemGroup>

  <ItemGroup>
    <!-- We don't need anything in this assembly, we just want to make sure it's built -->
    <Reference Include="Microsoft.AspNetCore.Razor.Design" />
    <Reference Include="rzc" />
    <Reference Include="Microsoft.AspNetCore.Razor.Test.MvcShim.ClassLib" />
  </ItemGroup>

  <Target Name="EnsureBuildVariablesGeneratedFile">
    <Error Text="BuildVariables.generated.cs was not found. Run .\build /t:Prepare from the root of the repository to generate it." Condition="!Exists('$(BuildVariablesGeneratedFile)')" />
  </Target>
  
</Project>
