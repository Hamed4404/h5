#nullable enable
Microsoft.JSInterop.Implementation.JSObjectReferenceJsonWorker
Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ByteArrays.get -> byte[]![]?
Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.ResultJson.get -> string?
Microsoft.JSInterop.SerializedArgs
Microsoft.JSInterop.SerializedArgs.SerializedArgs(string? argsJson, byte[]![]? byteArrays) -> void
abstract Microsoft.JSInterop.JSInProcessRuntime.InvokeJS(string! identifier, string? argsJson, byte[]![]? byteArrays, Microsoft.JSInterop.JSCallResultType resultType, long targetInstanceId) -> string?
abstract Microsoft.JSInterop.JSRuntime.BeginInvokeJS(long taskId, string! identifier, Microsoft.JSInterop.SerializedArgs serializedArgs, Microsoft.JSInterop.JSCallResultType resultType, long targetInstanceId) -> void
readonly Microsoft.JSInterop.SerializedArgs.ArgsJson -> string?
readonly Microsoft.JSInterop.SerializedArgs.ByteArrays -> byte[]![]?
static Microsoft.JSInterop.Implementation.JSObjectReferenceJsonWorker.ReadJSObjectReferenceIdentifier(ref System.Text.Json.Utf8JsonReader reader) -> long
static Microsoft.JSInterop.Implementation.JSObjectReferenceJsonWorker.WriteJSObjectReference(System.Text.Json.Utf8JsonWriter! writer, Microsoft.JSInterop.Implementation.JSObjectReference! objectReference) -> void
*REMOVED*Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.DotNetInvocationResult(System.Exception! exception, string? errorKind) -> void
*REMOVED*Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.DotNetInvocationResult(object? result) -> void
*REMOVED*Microsoft.JSInterop.Infrastructure.DotNetInvocationResult.Result.get -> object?
*REMOVED*static Microsoft.JSInterop.JSInProcessObjectReferenceExtensions.InvokeVoid(this Microsoft.JSInterop.IJSInProcessObjectReference! jsObjectReference, string! identifier, params object?[]! args) -> void
static Microsoft.JSInterop.Infrastructure.DotNetDispatcher.BeginInvokeDotNet(Microsoft.JSInterop.JSRuntime! jsRuntime, Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo invocationInfo, Microsoft.JSInterop.SerializedArgs serializedArgs) -> void
static Microsoft.JSInterop.Infrastructure.DotNetDispatcher.EndInvokeJS(Microsoft.JSInterop.JSRuntime! jsRuntime, Microsoft.JSInterop.SerializedArgs serializedArgs) -> void
static Microsoft.JSInterop.Infrastructure.DotNetDispatcher.Invoke(Microsoft.JSInterop.JSRuntime! jsRuntime, in Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo invocationInfo, Microsoft.JSInterop.SerializedArgs serializedArgs) -> Microsoft.JSInterop.SerializedArgs
static Microsoft.JSInterop.JSInProcessObjectReferenceExtensions.InvokeVoid(this Microsoft.JSInterop.IJSInProcessObjectReference! jsObjectReference, string! identifier, params object?[]? args) -> void
*REMOVED*static Microsoft.JSInterop.JSInProcessRuntimeExtensions.InvokeVoid(this Microsoft.JSInterop.IJSInProcessRuntime! jsRuntime, string! identifier, params object?[]! args) -> void
static Microsoft.JSInterop.JSInProcessRuntimeExtensions.InvokeVoid(this Microsoft.JSInterop.IJSInProcessRuntime! jsRuntime, string! identifier, params object?[]? args) -> void
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.Threading.CancellationToken cancellationToken, params object?[]! args) -> System.Threading.Tasks.ValueTask<TValue>
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.Threading.CancellationToken cancellationToken, params object?[]? args) -> System.Threading.Tasks.ValueTask<TValue>
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.TimeSpan timeout, params object?[]! args) -> System.Threading.Tasks.ValueTask<TValue>
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.TimeSpan timeout, params object?[]? args) -> System.Threading.Tasks.ValueTask<TValue>
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, params object?[]! args) -> System.Threading.Tasks.ValueTask<TValue>
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeAsync<TValue>(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, params object?[]? args) -> System.Threading.Tasks.ValueTask<TValue>
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.Threading.CancellationToken cancellationToken, params object?[]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.Threading.CancellationToken cancellationToken, params object?[]? args) -> System.Threading.Tasks.ValueTask
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.TimeSpan timeout, params object?[]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, System.TimeSpan timeout, params object?[]? args) -> System.Threading.Tasks.ValueTask
*REMOVED*static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, params object?[]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSObjectReferenceExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSObjectReference! jsObjectReference, string! identifier, params object?[]? args) -> System.Threading.Tasks.ValueTask
*REMOVED*static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, System.Threading.CancellationToken cancellationToken, params object![]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, System.Threading.CancellationToken cancellationToken, params object?[]? args) -> System.Threading.Tasks.ValueTask
*REMOVED*static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, System.TimeSpan timeout, params object![]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, System.TimeSpan timeout, params object?[]? args) -> System.Threading.Tasks.ValueTask
*REMOVED*static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, params object![]! args) -> System.Threading.Tasks.ValueTask
static Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(this Microsoft.JSInterop.IJSRuntime! jsRuntime, string! identifier, params object?[]? args) -> System.Threading.Tasks.ValueTask
virtual Microsoft.JSInterop.JSInProcessRuntime.InvokeJS(string! identifier, string? argsJson, byte[]![]? byteArrays) -> string?
virtual Microsoft.JSInterop.JSRuntime.BeginInvokeJS(long taskId, string! identifier, Microsoft.JSInterop.SerializedArgs serializedArgs) -> void
