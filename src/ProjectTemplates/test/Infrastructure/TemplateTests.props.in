<Project>
  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <RestoreAdditionalProjectSources>${RestoreAdditionalProjectSources}</RestoreAdditionalProjectSources>

    <!-- This sets an option which prevents the tests from rolling forward into a newer shared framework. -->
    <UserRuntimeConfig>$(MSBuildThisFileDirectory)runtimeconfig.norollforward.json</UserRuntimeConfig>
  </PropertyGroup>

  <ItemGroup>
    <KnownFrameworkReference
      Update="Microsoft.NETCore.App"
      DefaultRuntimeFrameworkVersion="${MicrosoftNETCoreAppRuntimeVersion}"
      LatestRuntimeFrameworkVersion="${MicrosoftNETCoreAppRuntimeVersion}"
      TargetingPackVersion="${MicrosoftNETCoreAppRefPackageVersion}" />

    <KnownFrameworkReference
      Update="Microsoft.AspNetCore.App"
      DefaultRuntimeFrameworkVersion="${MicrosoftAspNetCoreAppPackageVersion}"
      LatestRuntimeFrameworkVersion="${MicrosoftAspNetCoreAppPackageVersion}"
      TargetingPackVersion="${MicrosoftAspNetCoreAppPackageVersion}"
      RuntimePackRuntimeIdentifiers="${SupportedRuntimeIdentifiers}" />
  </ItemGroup>

<!-- Workaround while there is no 5.0 SDK available, copy known apphost/framework reference info from 3.0 -->

  <PropertyGroup>
    <NETCoreAppMaximumVersion>5.0</NETCoreAppMaximumVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <KnownAppHostPack 
      Include="@(KnownAppHostPack->WithMetadataValue('TargetFramework', 'netcoreapp3.0'))"
      TargetFramework="netcoreapp5.0"
      />
    <KnownFrameworkReference
      Include="@(KnownFrameworkReference->WithMetadataValue('TargetFramework', 'netcoreapp3.0'))"
      TargetFramework="netcoreapp5.0"
      />
  </ItemGroup>

  <!-- This can be removed after we update our build to use .NET Core Preivew7 SDK or newer. (Needs https://github.com/dotnet/core-sdk/pull/2401) -->
  <ItemGroup>
    <KnownFrameworkReference
      Update="Microsoft.NETCore.App"
      RuntimePackNamePatterns="Microsoft.NETCore.App.Runtime.**RID**"
      AppHostPackNamePattern=""
      AppHostRuntimeIdentifiers="" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Net.Compilers.Toolset"
      Version="${MicrosoftNetCompilersToolsetPackageVersion}"
      PrivateAssets="all"
      IsImplicitlyDefined="true" />
  </ItemGroup>

  <ItemGroup Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true' OR '$(RazorSdkCurrentVersionProps)' != ''">
    <!--
      Use the Razor SDK as a package reference. The version of the .NET Core SDK we build with often contains a version of the Razor SDK
      several versions older than latest. To avoid a cyclical dependency, this package reference is added to override the bundled version.
    -->
    <PackageReference Include="Microsoft.NET.Sdk.Razor" PrivateAssets="All" Version="${MicrosoftNETSdkRazorPackageVersion}" />
  </ItemGroup>
</Project>
