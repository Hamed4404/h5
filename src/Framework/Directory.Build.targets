<Project>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)..\, Directory.Build.targets))\Directory.Build.targets" />

  <Import Condition=" '$(MSBuildProjectExtension)' == '.pkgproj' " Project="Metapackage.targets" />

  <Target Name="PopulateNuspec" BeforeTargets="GenerateNuspec" Condition=" '$(MSBuildProjectExtension)' == '.shfxproj' ">
    <PropertyGroup>
      <NuspecProperties>
        id=$(PackageId);
        version=$(PackageVersion);
        authors=$(Authors);
        rid=$(SharedFxRid);
        description=$(PackageDescription);
        tags=$(PackageTags.Replace(';', ' '));
        licenseUrl=$(PackageLicenseUrl);
        projectUrl=$(PackageProjectUrl);
        iconUrl=$(PackageIconUrl);
        repositoryUrl=$(RepositoryUrl);
        repositoryCommit=$(RepositoryCommit);
        copyright=$(Copyright);
        targetFramework=$(TargetFramework);
        symbolsAssets=$([MSBuild]::NormalizeDirectory($(SymbolsOutputPath)));
        nativeAssets=$([MSBuild]::NormalizeDirectory($(NativeAssetsOutputPath)));
        runtimeAssets=$([MSBuild]::NormalizeDirectory($(RuntimeAssetsOutputPath)));
      </NuspecProperties>
    </PropertyGroup>
  </Target>

  <Target Name="GetArtifactInfo" Returns="@(ArtifactInfo)">
    <ItemGroup Condition=" '$(IsPackable)' == 'true' AND '$(PackageId)' != '' ">
      <ArtifactInfo Include="$(TargetPath)">
        <ArtifactType>NuGetPackage</ArtifactType>
        <PackageId>$(PackageId)</PackageId>
        <Version>$(PackageVersion)</Version>
      </ArtifactInfo>
    </ItemGroup>
  </Target>

</Project>
