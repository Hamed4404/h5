Microsoft.AspNetCore.Builder.RateLimiterEndpointConventionBuilderExtensions
Microsoft.AspNetCore.RateLimiting.IRateLimiterMetadata
Microsoft.AspNetCore.RateLimiting.IRateLimiterMetadata.Name.get -> string!
Microsoft.AspNetCore.RateLimiting.RateLimiterApplicationBuilderExtensions
Microsoft.AspNetCore.RateLimiting.RateLimiterMetadata
Microsoft.AspNetCore.RateLimiting.RateLimiterMetadata.Name.get -> string!
Microsoft.AspNetCore.RateLimiting.RateLimiterMetadata.RateLimiterMetadata(string! name) -> void
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.AddPolicy<TKey>(string! name, System.Func<Microsoft.AspNetCore.Http.HttpContext!, System.Threading.RateLimiting.RateLimitPartition<TKey>>! partitioner, bool global = false) -> Microsoft.AspNetCore.RateLimiting.RateLimiterOptions!
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.DefaultRejectionStatusCode.get -> int
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.DefaultRejectionStatusCode.set -> void
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.Limiter.get -> System.Threading.RateLimiting.PartitionedRateLimiter<Microsoft.AspNetCore.Http.HttpContext!>!
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.Limiter.set -> void
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.OnRejected.get -> System.Func<Microsoft.AspNetCore.Http.HttpContext!, System.Threading.RateLimiting.RateLimitLease!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.OnRejected.set -> void
Microsoft.AspNetCore.RateLimiting.RateLimiterOptions.RateLimiterOptions() -> void
Microsoft.AspNetCore.RateLimiting.RateLimiterOptionsExtensions
static Microsoft.AspNetCore.Builder.RateLimiterEndpointConventionBuilderExtensions.RequireRateLimiting<TBuilder>(this TBuilder builder, string! name) -> TBuilder
static Microsoft.AspNetCore.RateLimiting.RateLimiterApplicationBuilderExtensions.UseRateLimiter(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.RateLimiting.RateLimiterApplicationBuilderExtensions.UseRateLimiter(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app, Microsoft.AspNetCore.RateLimiting.RateLimiterOptions! options) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.RateLimiting.RateLimiterOptionsExtensions.AddConcurrencyLimiter(this Microsoft.AspNetCore.RateLimiting.RateLimiterOptions! options, string! name, System.Threading.RateLimiting.ConcurrencyLimiterOptions! concurrencyLimiterOptions, bool global = false) -> Microsoft.AspNetCore.RateLimiting.RateLimiterOptions!
static Microsoft.AspNetCore.RateLimiting.RateLimiterOptionsExtensions.AddFixedWindowRateLimiter(this Microsoft.AspNetCore.RateLimiting.RateLimiterOptions! options, string! name, System.Threading.RateLimiting.FixedWindowRateLimiterOptions! fixedWindowRateLimiterOptions, bool global = false) -> Microsoft.AspNetCore.RateLimiting.RateLimiterOptions!
static Microsoft.AspNetCore.RateLimiting.RateLimiterOptionsExtensions.AddSlidingWindowRateLimiter(this Microsoft.AspNetCore.RateLimiting.RateLimiterOptions! options, string! name, System.Threading.RateLimiting.SlidingWindowRateLimiterOptions! slidingWindowRateLimiterOptions, bool global = false) -> Microsoft.AspNetCore.RateLimiting.RateLimiterOptions!
static Microsoft.AspNetCore.RateLimiting.RateLimiterOptionsExtensions.AddTokenBucketRateLimiter(this Microsoft.AspNetCore.RateLimiting.RateLimiterOptions! options, string! name, System.Threading.RateLimiting.TokenBucketRateLimiterOptions! tokenBucketRateLimiterOptions, bool global = false) -> Microsoft.AspNetCore.RateLimiting.RateLimiterOptions!
