<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="142" failures="0" errors="0" time="11.749">
  <testsuite name="WebSockets" errors="0" failures="0" skipped="0" timestamp="2021-02-23T02:48:07" time="6.513" tests="1">
    <testcase classname="WebSockets can be used to connect to SignalR" name="WebSockets can be used to connect to SignalR" time="0.364">
    </testcase>
  </testsuite>
  <testsuite name="WebWorkers" errors="0" failures="0" skipped="0" timestamp="2021-02-23T02:48:07" time="6.827" tests="1">
    <testcase classname="WebWorkers can use SignalR client" name="WebWorkers can use SignalR client" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="connection" errors="0" failures="0" skipped="0" timestamp="2021-02-23T02:48:07" time="8.981" tests="11">
    <testcase classname="connection can connect to the server without specifying transport explicitly" name="connection can connect to the server without specifying transport explicitly" time="0.25">
    </testcase>
    <testcase classname="connection over WebSockets with FetchHttpClient can send and receive messages" name="connection over WebSockets with FetchHttpClient can send and receive messages" time="0.019">
    </testcase>
    <testcase classname="connection over WebSockets with FetchHttpClient does not log content of messages sent or received by default" name="connection over WebSockets with FetchHttpClient does not log content of messages sent or received by default" time="0.022">
    </testcase>
    <testcase classname="connection over WebSockets with FetchHttpClient does log content of messages sent or received when enabled" name="connection over WebSockets with FetchHttpClient does log content of messages sent or received when enabled" time="0.019">
    </testcase>
    <testcase classname="connection over ServerSentEvents with FetchHttpClient can send and receive messages" name="connection over ServerSentEvents with FetchHttpClient can send and receive messages" time="0.048">
    </testcase>
    <testcase classname="connection over ServerSentEvents with FetchHttpClient does not log content of messages sent or received by default" name="connection over ServerSentEvents with FetchHttpClient does not log content of messages sent or received by default" time="0.021">
    </testcase>
    <testcase classname="connection over ServerSentEvents with FetchHttpClient does log content of messages sent or received when enabled" name="connection over ServerSentEvents with FetchHttpClient does log content of messages sent or received when enabled" time="0.023">
    </testcase>
    <testcase classname="connection over LongPolling with FetchHttpClient can send and receive messages" name="connection over LongPolling with FetchHttpClient can send and receive messages" time="0.047">
    </testcase>
    <testcase classname="connection over LongPolling with FetchHttpClient does not log content of messages sent or received by default" name="connection over LongPolling with FetchHttpClient does not log content of messages sent or received by default" time="0.028">
    </testcase>
    <testcase classname="connection over LongPolling with FetchHttpClient does log content of messages sent or received when enabled" name="connection over LongPolling with FetchHttpClient does log content of messages sent or received when enabled" time="0.027">
    </testcase>
    <testcase classname="connection with FetchHttpClient follows HTTP redirects" name="connection with FetchHttpClient follows HTTP redirects" time="2.127">
    </testcase>
  </testsuite>
  <testsuite name="hubConnection" errors="0" failures="0" skipped="0" timestamp="2021-02-23T02:48:07" time="9.783" tests="129">
    <testcase classname="hubConnection using json over WebSockets transport can invoke server method and receive result" name="hubConnection using json over WebSockets transport can invoke server method and receive result" time="0.172">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport using https, can invoke server method and receive result" name="hubConnection using json over WebSockets transport using https, can invoke server method and receive result" time="0.024">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can invoke server method non-blocking and not receive result" name="hubConnection using json over WebSockets transport can invoke server method non-blocking and not receive result" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can invoke server method structural object and receive structural result" name="hubConnection using json over WebSockets transport can invoke server method structural object and receive structural result" time="0.023">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can stream server method and receive result" name="hubConnection using json over WebSockets transport can stream server method and receive result" time="0.026">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can stream server method and cancel stream" name="hubConnection using json over WebSockets transport can stream server method and cancel stream" time="0.016">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport rethrows an exception from the server when invoking" name="hubConnection using json over WebSockets transport rethrows an exception from the server when invoking" time="0.033">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport throws an exception when invoking streaming method with invoke" name="hubConnection using json over WebSockets transport throws an exception when invoking streaming method with invoke" time="0.012">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport throws an exception when receiving a streaming result for method called with invoke" name="hubConnection using json over WebSockets transport throws an exception when receiving a streaming result for method called with invoke" time="0.012">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport rethrows an exception from the server when streaming" name="hubConnection using json over WebSockets transport rethrows an exception from the server when streaming" time="0.012">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport throws an exception when invoking hub method with stream" name="hubConnection using json over WebSockets transport throws an exception when invoking hub method with stream" time="0.011">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can receive server calls" name="hubConnection using json over WebSockets transport can receive server calls" time="0.011">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can receive server calls without rebinding handler when restarted" name="hubConnection using json over WebSockets transport can receive server calls without rebinding handler when restarted" time="0.023">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport closed with error or start fails if hub cannot be created" name="hubConnection using json over WebSockets transport closed with error or start fails if hub cannot be created" time="0.011">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can handle different types" name="hubConnection using json over WebSockets transport can handle different types" time="0.032">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can receive different types" name="hubConnection using json over WebSockets transport can receive different types" time="0.011">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can be restarted" name="hubConnection using json over WebSockets transport can be restarted" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can stream from client to server with rxjs" name="hubConnection using json over WebSockets transport can stream from client to server with rxjs" time="0.018">
    </testcase>
    <testcase classname="hubConnection using json over WebSockets transport can stream from client to server and close with error with rxjs" name="hubConnection using json over WebSockets transport can stream from client to server and close with error with rxjs" time="0.013">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can invoke server method and receive result" name="hubConnection using messagepack over WebSockets transport can invoke server method and receive result" time="0.047">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport using https, can invoke server method and receive result" name="hubConnection using messagepack over WebSockets transport using https, can invoke server method and receive result" time="0.016">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can invoke server method non-blocking and not receive result" name="hubConnection using messagepack over WebSockets transport can invoke server method non-blocking and not receive result" time="0.009">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can invoke server method structural object and receive structural result" name="hubConnection using messagepack over WebSockets transport can invoke server method structural object and receive structural result" time="0.066">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can stream server method and receive result" name="hubConnection using messagepack over WebSockets transport can stream server method and receive result" time="0.012">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can stream server method and cancel stream" name="hubConnection using messagepack over WebSockets transport can stream server method and cancel stream" time="0.013">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport rethrows an exception from the server when invoking" name="hubConnection using messagepack over WebSockets transport rethrows an exception from the server when invoking" time="0.01">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport throws an exception when invoking streaming method with invoke" name="hubConnection using messagepack over WebSockets transport throws an exception when invoking streaming method with invoke" time="0.01">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport throws an exception when receiving a streaming result for method called with invoke" name="hubConnection using messagepack over WebSockets transport throws an exception when receiving a streaming result for method called with invoke" time="0.009">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport rethrows an exception from the server when streaming" name="hubConnection using messagepack over WebSockets transport rethrows an exception from the server when streaming" time="0.01">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport throws an exception when invoking hub method with stream" name="hubConnection using messagepack over WebSockets transport throws an exception when invoking hub method with stream" time="0.011">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can receive server calls" name="hubConnection using messagepack over WebSockets transport can receive server calls" time="0.01">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can receive server calls without rebinding handler when restarted" name="hubConnection using messagepack over WebSockets transport can receive server calls without rebinding handler when restarted" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport closed with error or start fails if hub cannot be created" name="hubConnection using messagepack over WebSockets transport closed with error or start fails if hub cannot be created" time="0.01">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can handle different types" name="hubConnection using messagepack over WebSockets transport can handle different types" time="0.027">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can receive different types" name="hubConnection using messagepack over WebSockets transport can receive different types" time="0.014">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can be restarted" name="hubConnection using messagepack over WebSockets transport can be restarted" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can stream from client to server with rxjs" name="hubConnection using messagepack over WebSockets transport can stream from client to server with rxjs" time="0.011">
    </testcase>
    <testcase classname="hubConnection using messagepack over WebSockets transport can stream from client to server and close with error with rxjs" name="hubConnection using messagepack over WebSockets transport can stream from client to server and close with error with rxjs" time="0.011">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can invoke server method and receive result" name="hubConnection using json over ServerSentEvents transport can invoke server method and receive result" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport using https, can invoke server method and receive result" name="hubConnection using json over ServerSentEvents transport using https, can invoke server method and receive result" time="0.024">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can invoke server method non-blocking and not receive result" name="hubConnection using json over ServerSentEvents transport can invoke server method non-blocking and not receive result" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can invoke server method structural object and receive structural result" name="hubConnection using json over ServerSentEvents transport can invoke server method structural object and receive structural result" time="0.014">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can stream server method and receive result" name="hubConnection using json over ServerSentEvents transport can stream server method and receive result" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can stream server method and cancel stream" name="hubConnection using json over ServerSentEvents transport can stream server method and cancel stream" time="0.018">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport rethrows an exception from the server when invoking" name="hubConnection using json over ServerSentEvents transport rethrows an exception from the server when invoking" time="0.014">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport throws an exception when invoking streaming method with invoke" name="hubConnection using json over ServerSentEvents transport throws an exception when invoking streaming method with invoke" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport throws an exception when receiving a streaming result for method called with invoke" name="hubConnection using json over ServerSentEvents transport throws an exception when receiving a streaming result for method called with invoke" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport rethrows an exception from the server when streaming" name="hubConnection using json over ServerSentEvents transport rethrows an exception from the server when streaming" time="0.016">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport throws an exception when invoking hub method with stream" name="hubConnection using json over ServerSentEvents transport throws an exception when invoking hub method with stream" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can receive server calls" name="hubConnection using json over ServerSentEvents transport can receive server calls" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can receive server calls without rebinding handler when restarted" name="hubConnection using json over ServerSentEvents transport can receive server calls without rebinding handler when restarted" time="0.026">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport closed with error or start fails if hub cannot be created" name="hubConnection using json over ServerSentEvents transport closed with error or start fails if hub cannot be created" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can handle different types" name="hubConnection using json over ServerSentEvents transport can handle different types" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can receive different types" name="hubConnection using json over ServerSentEvents transport can receive different types" time="0.013">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can be restarted" name="hubConnection using json over ServerSentEvents transport can be restarted" time="0.026">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can stream from client to server with rxjs" name="hubConnection using json over ServerSentEvents transport can stream from client to server with rxjs" time="0.022">
    </testcase>
    <testcase classname="hubConnection using json over ServerSentEvents transport can stream from client to server and close with error with rxjs" name="hubConnection using json over ServerSentEvents transport can stream from client to server and close with error with rxjs" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can invoke server method and receive result" name="hubConnection using json over LongPolling transport can invoke server method and receive result" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport using https, can invoke server method and receive result" name="hubConnection using json over LongPolling transport using https, can invoke server method and receive result" time="0.034">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can invoke server method non-blocking and not receive result" name="hubConnection using json over LongPolling transport can invoke server method non-blocking and not receive result" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can invoke server method structural object and receive structural result" name="hubConnection using json over LongPolling transport can invoke server method structural object and receive structural result" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can stream server method and receive result" name="hubConnection using json over LongPolling transport can stream server method and receive result" time="0.02">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can stream server method and cancel stream" name="hubConnection using json over LongPolling transport can stream server method and cancel stream" time="0.02">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport rethrows an exception from the server when invoking" name="hubConnection using json over LongPolling transport rethrows an exception from the server when invoking" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport throws an exception when invoking streaming method with invoke" name="hubConnection using json over LongPolling transport throws an exception when invoking streaming method with invoke" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport throws an exception when receiving a streaming result for method called with invoke" name="hubConnection using json over LongPolling transport throws an exception when receiving a streaming result for method called with invoke" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport rethrows an exception from the server when streaming" name="hubConnection using json over LongPolling transport rethrows an exception from the server when streaming" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport throws an exception when invoking hub method with stream" name="hubConnection using json over LongPolling transport throws an exception when invoking hub method with stream" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can receive server calls" name="hubConnection using json over LongPolling transport can receive server calls" time="0.021">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can receive server calls without rebinding handler when restarted" name="hubConnection using json over LongPolling transport can receive server calls without rebinding handler when restarted" time="0.039">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport closed with error or start fails if hub cannot be created" name="hubConnection using json over LongPolling transport closed with error or start fails if hub cannot be created" time="0.018">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can handle different types" name="hubConnection using json over LongPolling transport can handle different types" time="0.02">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can receive different types" name="hubConnection using json over LongPolling transport can receive different types" time="0.019">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can be restarted" name="hubConnection using json over LongPolling transport can be restarted" time="0.039">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can stream from client to server with rxjs" name="hubConnection using json over LongPolling transport can stream from client to server with rxjs" time="0.028">
    </testcase>
    <testcase classname="hubConnection using json over LongPolling transport can stream from client to server and close with error with rxjs" name="hubConnection using json over LongPolling transport can stream from client to server and close with error with rxjs" time="0.03">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can invoke server method and receive result" name="hubConnection using messagepack over LongPolling transport can invoke server method and receive result" time="0.018">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport using https, can invoke server method and receive result" name="hubConnection using messagepack over LongPolling transport using https, can invoke server method and receive result" time="0.031">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can invoke server method non-blocking and not receive result" name="hubConnection using messagepack over LongPolling transport can invoke server method non-blocking and not receive result" time="0.017">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can invoke server method structural object and receive structural result" name="hubConnection using messagepack over LongPolling transport can invoke server method structural object and receive structural result" time="0.018">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can stream server method and receive result" name="hubConnection using messagepack over LongPolling transport can stream server method and receive result" time="0.021">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can stream server method and cancel stream" name="hubConnection using messagepack over LongPolling transport can stream server method and cancel stream" time="0.021">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport rethrows an exception from the server when invoking" name="hubConnection using messagepack over LongPolling transport rethrows an exception from the server when invoking" time="0.02">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport throws an exception when invoking streaming method with invoke" name="hubConnection using messagepack over LongPolling transport throws an exception when invoking streaming method with invoke" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport throws an exception when receiving a streaming result for method called with invoke" name="hubConnection using messagepack over LongPolling transport throws an exception when receiving a streaming result for method called with invoke" time="0.022">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport rethrows an exception from the server when streaming" name="hubConnection using messagepack over LongPolling transport rethrows an exception from the server when streaming" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport throws an exception when invoking hub method with stream" name="hubConnection using messagepack over LongPolling transport throws an exception when invoking hub method with stream" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can receive server calls" name="hubConnection using messagepack over LongPolling transport can receive server calls" time="0.022">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can receive server calls without rebinding handler when restarted" name="hubConnection using messagepack over LongPolling transport can receive server calls without rebinding handler when restarted" time="0.042">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport closed with error or start fails if hub cannot be created" name="hubConnection using messagepack over LongPolling transport closed with error or start fails if hub cannot be created" time="0.018">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can handle different types" name="hubConnection using messagepack over LongPolling transport can handle different types" time="0.018">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can receive different types" name="hubConnection using messagepack over LongPolling transport can receive different types" time="0.019">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can be restarted" name="hubConnection using messagepack over LongPolling transport can be restarted" time="0.038">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can stream from client to server with rxjs" name="hubConnection using messagepack over LongPolling transport can stream from client to server with rxjs" time="0.027">
    </testcase>
    <testcase classname="hubConnection using messagepack over LongPolling transport can stream from client to server and close with error with rxjs" name="hubConnection using messagepack over LongPolling transport can stream from client to server and close with error with rxjs" time="0.029">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport can connect to hub with authorization" name="hubConnection over WebSockets transport can connect to hub with authorization" time="0.191">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport can connect to hub with authorization using async token factory" name="hubConnection over WebSockets transport can connect to hub with authorization using async token factory" time="0.016">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport terminates if no messages received within timeout interval" name="hubConnection over WebSockets transport terminates if no messages received within timeout interval" time="0.021">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport preserves cookies between requests" name="hubConnection over WebSockets transport preserves cookies between requests" time="0.017">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport expired cookies are not preserved" name="hubConnection over WebSockets transport expired cookies are not preserved" time="0.018">
    </testcase>
    <testcase classname="hubConnection over WebSockets transport can reconnect" name="hubConnection over WebSockets transport can reconnect" time="0.019">
    </testcase>
    <testcase classname="hubConnection can change url in reconnecting state" name="hubConnection can change url in reconnecting state" time="0.009">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport can connect to hub with authorization" name="hubConnection over ServerSentEvents transport can connect to hub with authorization" time="0.015">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport can connect to hub with authorization using async token factory" name="hubConnection over ServerSentEvents transport can connect to hub with authorization using async token factory" time="0.023">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport terminates if no messages received within timeout interval" name="hubConnection over ServerSentEvents transport terminates if no messages received within timeout interval" time="0.021">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport preserves cookies between requests" name="hubConnection over ServerSentEvents transport preserves cookies between requests" time="0.028">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport expired cookies are not preserved" name="hubConnection over ServerSentEvents transport expired cookies are not preserved" time="0.023">
    </testcase>
    <testcase classname="hubConnection over ServerSentEvents transport can reconnect" name="hubConnection over ServerSentEvents transport can reconnect" time="0.026">
    </testcase>
    <testcase classname="hubConnection can change url in reconnecting state" name="hubConnection can change url in reconnecting state" time="0.01">
    </testcase>
    <testcase classname="hubConnection over LongPolling transport can connect to hub with authorization" name="hubConnection over LongPolling transport can connect to hub with authorization" time="0.022">
    </testcase>
    <testcase classname="hubConnection over LongPolling transport can connect to hub with authorization using async token factory" name="hubConnection over LongPolling transport can connect to hub with authorization using async token factory" time="0.036">
    </testcase>
    <testcase classname="hubConnection over LongPolling transport preserves cookies between requests" name="hubConnection over LongPolling transport preserves cookies between requests" time="0.039">
    </testcase>
    <testcase classname="hubConnection over LongPolling transport expired cookies are not preserved" name="hubConnection over LongPolling transport expired cookies are not preserved" time="0.033">
    </testcase>
    <testcase classname="hubConnection over LongPolling transport can reconnect" name="hubConnection over LongPolling transport can reconnect" time="0.041">
    </testcase>
    <testcase classname="hubConnection can change url in reconnecting state" name="hubConnection can change url in reconnecting state" time="0.015">
    </testcase>
    <testcase classname="hubConnection can reconnect after negotiate redirect" name="hubConnection can reconnect after negotiate redirect" time="0.041">
    </testcase>
    <testcase classname="hubConnection can reconnect after skipping negotiation" name="hubConnection can reconnect after skipping negotiation" time="0.023">
    </testcase>
    <testcase classname="hubConnection connection id matches server side connection id" name="hubConnection connection id matches server side connection id" time="0.036">
    </testcase>
    <testcase classname="hubConnection connection id is alwys null is negotiation is skipped" name="hubConnection connection id is alwys null is negotiation is skipped" time="0.006">
    </testcase>
    <testcase classname="hubConnection skips Server-Sent Events when negotiating for MessagePack protocol" name="hubConnection skips Server-Sent Events when negotiating for MessagePack protocol" time="0.021">
    </testcase>
    <testcase classname="hubConnection transport falls back from WebSockets to SSE or LongPolling" name="hubConnection transport falls back from WebSockets to SSE or LongPolling" time="0">
    </testcase>
    <testcase classname="hubConnection over LongPolling it sends DELETE request and waits for poll to terminate" name="hubConnection over LongPolling it sends DELETE request and waits for poll to terminate" time="0.015">
    </testcase>
    <testcase classname="hubConnection populates the Content-Type header when sending XMLHttpRequest" name="hubConnection populates the Content-Type header when sending XMLHttpRequest" time="0">
    </testcase>
    <testcase classname="hubConnection sets the user agent header" name="hubConnection sets the user agent header" time="0.01">
    </testcase>
    <testcase classname="hubConnection overwrites library headers with user headers" name="hubConnection overwrites library headers with user headers" time="0.011">
    </testcase>
    <testcase classname="hubConnection sets the user agent header" name="hubConnection sets the user agent header" time="0.013">
    </testcase>
    <testcase classname="hubConnection overwrites library headers with user headers" name="hubConnection overwrites library headers with user headers" time="0.016">
    </testcase>
    <testcase classname="hubConnection sets the user agent header" name="hubConnection sets the user agent header" time="0.018">
    </testcase>
    <testcase classname="hubConnection overwrites library headers with user headers" name="hubConnection overwrites library headers with user headers" time="0.023">
    </testcase>
  </testsuite>
</testsuites>