@using Microsoft.AspNetCore.Components.Web
@namespace Microsoft.AspNetCore.Components.QuickGrid

<div class="paginator">
    @if (State.TotalItemCount.HasValue)
    {
        <div class="summary">
            @if (SummaryTemplate is not null)
            {
                @SummaryTemplate
            }
            else
            {
                <text><strong>@State.TotalItemCount</strong> items</text>
            }
        </div>
        <nav role="navigation">
            <a class="go-first" type="button" href="@(CanGoBack ? GetPageUrl(0) : null)" @onclick="GoFirstAsync" disabled="@(!CanGoBack)" title="Go to first page" aria-label="Go to first page"></a>
            <a class="go-previous" type="button" href="@(CanGoBack ? GetPageUrl(State.CurrentPageIndex - 1) : null)" @onclick="GoPreviousAsync" disabled="@(!CanGoBack)" title="Go to previous page" aria-label="Go to previous page"></a>
            <div class="pagination-text">
                Page <strong>@(State.CurrentPageIndex + 1)</strong>
                of <strong>@(State.LastPageIndex + 1)</strong>
            </div>
            <a class="go-next" type="button" href="@(CanGoForwards ? GetPageUrl(State.CurrentPageIndex + 1) : null)" @onclick="GoNextAsync" disabled="@(!CanGoForwards)" title="Go to next page" aria-label="Go to next page"></a>
            <a class="go-last" type="button" href="@(CanGoForwards ? GetPageUrl(State.LastPageIndex) : null)" @onclick="GoLastAsync" disabled="@(!CanGoForwards)" title="Go to last page" aria-label="Go to last page"></a>
        </nav>
    }
</div>
