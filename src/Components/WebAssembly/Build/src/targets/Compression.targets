<Project>
  <PropertyGroup>

    <ResolveCurrentProjectStaticWebAssetsDependsOn>
      $(ResolveCurrentProjectStaticWebAssetsDependsOn);
      _CompressBlazorApplicationFiles;
    </ResolveCurrentProjectStaticWebAssetsDependsOn>

  </PropertyGroup>

  <Target Name="_ResolveBlazorFilesToCompress" AfterTargets="_ResolveBlazorGeneratedAssets">

    <PropertyGroup>
      <_BlazorFilesIntermediateOutputPath>$(IntermediateOutputPath)compressed\</_BlazorFilesIntermediateOutputPath>
    </PropertyGroup>

    <MakeDir Directories="$(_BlazorFilesIntermediateOutputPath)" />
    <ItemGroup>
      <_BlazorFileToCompress Include="@(StaticWebAsset)" Condition="'%(SourceType)' == '' and $([System.String]::Copy('%(RelativePath)').Replace('\','/').StartsWith('_framework/'))" KeepDuplicates="false">
        <TargetCompressionPath>$(_BlazorFilesIntermediateOutputPath)%(RelativePath).gz</TargetCompressionPath>
        <TargetOutputPath>%(RelativePath).gz</TargetOutputPath>
        <RelativePath>%(RelativePath).gz</RelativePath>
        <InputSource>%(FullPath)</InputSource>
      </_BlazorFileToCompress>

      <!-- The linker is not incremental, so to support incremental compression in addition to linking we need to compute the hashes of the dlls and
           pdbs, write them to a file when they change and use that as input for the compression task instead. -->
      <_BlazorFileToCompress Condition="'$(BlazorLinkOnBuild)' == 'true' and ('%(Extension)' == '.dll' or '%(Extension)' == '.pdb')">
        <InputSource>$([MSBuild]::NormalizePath('$(_BlazorFilesIntermediateOutputPath)%(RelativePath).hash'))</InputSource>
      </_BlazorFileToCompress>

      <_CompressedStaticWebAsset Include="@(_BlazorFileToCompress->'%(TargetCompressionPath)')" RemoveMetadata="TargetOutputPath;TargetCompressionPath" />

      <StaticWebAsset Include="@(_CompressedStaticWebAsset->'%(FullPath)')" KeepMetadata="SourceType;SourceId;ContentRoot;BasePath;RelativePath" />
      <FileWrites Include="@(_CompressedStaticWebAsset)" />

    </ItemGroup>

    <GetFileHash Files="@(_BlazorFileToCompress)" Condition="'$(BlazorLinkOnBuild)' == 'true' and ('%(Extension)' == '.dll' or '%(Extension)' == '.pdb')">
      <Output TaskParameter="Items" ItemName="_LinkerOutputHashes" />
    </GetFileHash>

    <WriteLinesToFile Condition="'@(_LinkerOutputHashes)' != ''" Lines="%(_LinkerOutputHashes.FileHash)" File="%(_LinkerOutputHashes.InputSource)" WriteOnlyWhenDifferent="true" Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="%(_LinkerOutputHashes.InputSource)" />
    </ItemGroup>

  </Target>

  <UsingTask TaskName="CompressBlazorApplicationFiles" AssemblyFile="$(_BlazorTasksPath)" />

  <Target
    Name="_CompressBlazorApplicationFiles"
    AfterTargets="_ResolveBlazorFilesToCompress"
    Inputs="%(_BlazorFileToCompress.InputSource)"
    Outputs="%(_BlazorFileToCompress.TargetCompressionPath)">

    <CompressBlazorApplicationFiles StaticWebAsset="@(_BlazorFileToCompress)" />

  </Target>

</Project>
