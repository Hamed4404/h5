@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="model">
    <DerivedInputTextComponent @bind-Value="@model.TextValue" id="derived-input-text" />
    <DerivedInputTextareaComponent @bind-Value="@model.TextValue" id="derived-input-textarea" />
    <DerivedInputDateComponent @bind-Value="@model.DateValue" id="derived-input-date" />
    <DerivedInputNumberComponent @bind-Value="@model.IntValue" id="derived-input-number" />
    <DerivedInputCheckboxComponent @bind-Value="@model.BoolValue" id="derived-input-checkbox" />
    <DerivedInputRadioGroupComponent @bind-Value="@model.RadioValue">
        <InputRadio Value="@DayOfWeek.Saturday" id="input-radio-sunday" />
    </DerivedInputRadioGroupComponent>
    <DerivedInputSelectComponent @bind-Value="@model.SelectValue" id="derived-select">
        <option value="@DayOfWeek.Friday">Friday</option>
        <option value="@DayOfWeek.Monday">Monday</option>
    </DerivedInputSelectComponent>
    <DerivedInputSelectMultipleComponent @bind-Value="@model.SelectMultipleValue" id="derived-select-multiple">
        <option value="@DayOfWeek.Friday">Friday</option>
        <option value="@DayOfWeek.Monday">Monday</option>
        <option value="@DayOfWeek.Tuesday">Tuesday</option>
    </DerivedInputSelectMultipleComponent>

    <InputText id="inputtext-with-mutating-setter" @bind-Value="@StringWithMutatingSetter" />
    <InputTextArea id="inputtextarea-with-mutating-setter" @bind-Value="@StringWithMutatingSetter" />
    <InputCheckbox id="inputcheckbox-with-mutating-setter" @bind-Value="@BoolWithMutatingSetter" />
    <InputDate id="inputdate-with-mutating-setter" @bind-Value="@DateTimeWithMutatingSetter" />
    <InputNumber id="inputnumber-with-mutating-setter" @bind-Value="@IntWithMutatingSetter" />
    <InputRadioGroup @bind-Value="@DayOfWeekWithMutatingSetter">
        <InputRadio Value="@DayOfWeek.Monday" id="inputradiogroup-with-mutating-setter-monday" />
        <InputRadio Value="@DayOfWeek.Tuesday" id="inputradiogroup-with-mutating-setter-tuesday" />
        <InputRadio Value="@DayOfWeek.Wednesday" id="inputradiogroup-with-mutating-setter-wednesday" />
    </InputRadioGroup>
    <InputSelect id="inputselect-with-mutating-setter" @bind-Value="@DayOfWeekWithMutatingSetter">
        <option value="@DayOfWeek.Monday">Monday</option>
        <option value="@DayOfWeek.Tuesday">Tuesday</option>
        <option value="@DayOfWeek.Wednesday">Wednesday</option>
    </InputSelect>
    <InputSelect id="inputselectmultiple-with-mutating-setter" @bind-Value="@DayOfWeekArrayWithMutatingSetter">
        <option value="@DayOfWeek.Monday">Monday</option>
        <option value="@DayOfWeek.Tuesday">Tuesday</option>
        <option value="@DayOfWeek.Wednesday">Wednesday</option>
    </InputSelect>
</EditForm>

<button id="move-focus-button">Move focus</button>

@code
{
    // Repro for https://github.com/dotnet/aspnetcore/issues/40097

    private Model model = new Model();
    private class Model
    {
        public string TextValue { get; set; }
        public DateTime? DateValue { get; set; }
        public int? IntValue { get; set; }
        public bool BoolValue { get; set; }
        public DayOfWeek RadioValue { get; set; } = DayOfWeek.Monday;
        public DayOfWeek SelectValue { get; set; } = DayOfWeek.Monday;
        public DayOfWeek[] SelectMultipleValue { get; set; } = DerivedInputSelectMultipleComponent.FixedValue;
    }

    string stringWithMutatingSetter;
    string StringWithMutatingSetter
    {
        get => stringWithMutatingSetter;
        set
        {
            stringWithMutatingSetter = value == "24h" ? "24:00:00" : value;
        }
    }

    bool BoolWithMutatingSetter
    {
        get => false;
        set { } // In effect, we mutate any incoming 'true' to 'false'
    }

    DateTime dateTimeWithMutatingSetter;
    DateTime DateTimeWithMutatingSetter
    {
        get => dateTimeWithMutatingSetter;
        set
        {
            dateTimeWithMutatingSetter = value.Year == 2000 ? new DateTime(2222, 2, 2) : value;
        }
    }

    int intWithMutatingSetter;
    int IntWithMutatingSetter
    {
        get => intWithMutatingSetter;
        set
        {
            intWithMutatingSetter = value == 123 ? 100 : value;
        }
    }

    DayOfWeek dayOfWeekWithMutatingSetter;
    DayOfWeek DayOfWeekWithMutatingSetter
    {
        get => dayOfWeekWithMutatingSetter;
        set
        {
            dayOfWeekWithMutatingSetter = value == DayOfWeek.Tuesday ? DayOfWeek.Monday : value;
        }
    }

    DayOfWeek[] dayOfWeekArrayWithMutatingSetter = Array.Empty<DayOfWeek>();
    DayOfWeek[] DayOfWeekArrayWithMutatingSetter
    {
        get => dayOfWeekArrayWithMutatingSetter;
        set
        {
            dayOfWeekArrayWithMutatingSetter = value.Contains(DayOfWeek.Tuesday)
                ? new[] { DayOfWeek.Monday, DayOfWeek.Wednesday }
                : value;
        }
    }
}
